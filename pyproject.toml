[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "mdformat"
version = "0.6.1"  # DO NOT EDIT THIS LINE MANUALLY. LET bump2version UTILITY DO IT
authors = ["Taneli Hukkinen <hukkinj1@users.noreply.github.com>"]
description = "CommonMark compliant Markdown formatter"
repository = "https://github.com/executablebooks/mdformat"
readme = "README.md"
license = "MIT"
classifiers = [
    "Environment :: Console",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Topic :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
    "Typing :: Typed",
]
keywords = ["mdformat", "markdown", "commonmark", "formatter", "pre-commit"]

packages = [
    {include = "mdformat"},
]
include = ["mdformat/py.typed"]

[tool.poetry.urls]
"Changelog" = "https://github.com/TODO/UPDATE-ME.md"
"Style guide" = "https://github.com/TODO/UPDATE-ME.md"

[tool.poetry.scripts]
mdformat = "mdformat.__main__:run"

[tool.poetry.dependencies]
python = "^3.6.1"
markdown-it-py = ">=0.5.5,<0.7.0"
importlib-metadata = { version = ">=0.12", python = "<3.8" }
typing-extensions= { version = ">=3.7.4", python = "<3.8" }

[tool.poetry.dev-dependencies]
# Tests
pytest = "*"
pytest-randomly = "*"
pytest-cov = "*"
# This is a dependency of pytest-cov that we list explicitly because we
# want the "toml" extra for pyproject.toml support.
coverage = { version = "*", extras = ["toml"] }

# Tools
pre-commit = "*"
mypy = "*"  # this is separate to pre-commit, since it requires an external env
bump2version = "*"

# Docs
sphinx = "*"
myst-parser = "*"
furo = "*"


[tool.isort]
# Force imports to be sorted by module, independent of import type
force_sort_within_sections = true
# Group first party and local folder imports together
no_lines_before = ["LOCALFOLDER"]

# Configure isort to work without access to site-packages
known_first_party = ["mdformat", "tests"]

# Settings for Black compatibility
profile = "black"


[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config"
xfail_strict = true


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{36,37,38,39}
isolated_build = True
requires =
    poetry >= 1.1.4

[testenv]
allowlist_externals = poetry

[testenv:py{36,37,38,39}]
commands_pre =
    # TODO: Use --dev-only flag when poetry 1.2 is released
    poetry install --no-root
commands =
    pytest {posargs}

[testenv:py{36,37,38,39}-pre-commit]
skip_install = True
deps = pre-commit
commands = pre-commit run {posargs}

[testenv:py{36,37,38,39}-mypy]
commands_pre =
    # TODO: Use --dev-only flag when poetry 1.2 is released
    poetry install --no-root
commands =
    mypy {posargs:.}

[testenv:py{36,37,38,39}-hook]
skip_install = True
deps = pre-commit
commands = pre-commit try-repo . mdformat --verbose --show-diff-on-failure --files README.md

[testenv:py{36,37,38,39}-cli]
commands = mdformat {posargs}
"""


[tool.coverage.run]
omit = ["tests/*", "*/site-packages/*"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "mdformat"
version = "0.5.7"  # DO NOT EDIT THIS LINE MANUALLY. LET bump2version UTILITY DO IT
authors = ["Taneli Hukkinen <hukkinj1@users.noreply.github.com>"]
description = "CommonMark compliant Markdown formatter"
repository = "https://github.com/executablebooks/mdformat"
readme = "README.md"
license = "MIT"
classifiers = [
    "Environment :: Console",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Topic :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
    "Typing :: Typed",
]
keywords = ["mdformat", "markdown", "commonmark", "formatter", "pre-commit"]

packages = [
    {include = "mdformat"},
]
include = ["mdformat/py.typed"]

[tool.poetry.urls]
"Changelog" = "https://github.com/executablebooks/mdformat/blob/master/CHANGELOG.md"
"Style guide" = "https://github.com/executablebooks/mdformat/blob/master/STYLE.md"

[tool.poetry.scripts]
mdformat = "mdformat.__main__:run"

[tool.poetry.dependencies]
python = "^3.6.1"
markdown-it-py = ">=0.5.5"
importlib-metadata = { version = ">=0.12", python = "<3.8" }
typing-extensions= { version = "*", python = "<3.8" }

[tool.poetry.dev-dependencies]
# Tests
pytest = "*"
pytest-randomly = "*"
pytest-cov = "*"

# Tools
pre-commit = "*"
mypy = "*"  # this is separate to pre-commit, since it requires an external env
bump2version = "*"


[tool.isort]
skip = ["venv"]
# Force imports to be sorted by module, independent of import type
force_sort_within_sections = true
# Group first party and local folder imports together
no_lines_before = ["LOCALFOLDER"]

# Configure isort to work without access to site-packages
known_first_party = ["mdformat", "tests"]

# Settings for Black compatibility
profile = "black"


[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config"
xfail_strict = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{36,37,38}
isolated_build = True

[testenv:py{36,37,38}]
# from https://github.com/python-poetry/poetry/issues/1941
# it appears there is no easy way to access [tool.poetry.dev-dependencies]
deps =
    pytest
    pytest-randomly
    pytest-cov
commands = pytest {posargs}

[testenv:py{36,37,38}-pre-commit]
deps = pre-commit
commands = pre-commit run {posargs}

[testenv:py{36,37,38}-mypy]
deps =
    mypy
    pytest
commands = mypy {posargs:.}

[testenv:py{36,37,38}-hook]
deps = pre-commit
commands = pre-commit try-repo . mdformat --verbose --show-diff-on-failure --files CHANGELOG.md CONTRIBUTING.md README.md STYLE.md

[testenv:py{36,37,38}-cli]
commands = mdformat {posargs}

"""
